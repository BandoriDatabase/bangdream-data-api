{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.0",
    "title": "Bandori Top Public API",
    "description": "The Public API of Bandori Top. Only for personal use, any commercial usage is strictly not allowed.",
    "contact": {
      "name": "Bandori Top Dev",
      "email": "dev@bandori.top",
      "url": "https://github.com/BandoriDatabase"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/BandoriDatabase/bangdream-data-api/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://api.bandori.top/v1/",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8180/v1/",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/card": {
      "get": {
        "description": "Return a limited count of game cards. The latest cards are in front.\n",
        "operationId": "findCards",
        "parameters": [
          {
            "name": "rarity",
            "in": "query",
            "description": "filter cards by rarity",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint32"
              }
            }
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Page"
          }
        ],
        "responses": {
          "200": {
            "description": "game cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CardBasic"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/card/{id}": {
      "get": {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "find pet by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Card": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CardBasic"
          },
          {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "CardBasic": {
        "required": [
          "characterId",
          "cardId"
        ],
        "properties": {
          "characterId": {
            "type": "string",
            "example": "1"
          },
          "cardId": {
            "type": "string",
            "example": "1"
          },
          "cardRes": {
            "type": "string",
            "description": "reference for card image resources",
            "example": "res001001"
          },
          "attr": {
            "type": "string",
            "description": "card attribute",
            "enum": [
              "powerful",
              "happy",
              "pure",
              "cool"
            ]
          },
          "title": {
            "type": "string",
            "example": "猪突猛進っ！"
          },
          "rarity": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "Error": {
        "type": "string"
      }
    },
    "parameters": {
      "Limit": {
        "name": "limit",
        "in": "query",
        "description": "maximum number of results to return, less than 200, default 20",
        "schema": {
          "type": "integer",
          "format": "uint32"
        }
      },
      "Page": {
        "name": "page",
        "in": "query",
        "description": "the page of items to show, default 1, use with limit",
        "schema": {
          "type": "integer",
          "format": "uint32"
        }
      }
    }
  }
}